global_lights:
  template: generic_card
  triggers_update: all

  variables:
    mj_entities: []
    mj_hide_controls_icon: true
    mj_rows:
      - controls

  icon: mdi:lightbulb-group
  name: Lights
  state_display: >
    [[[
      const lights = Object.values(states).filter(item => item.entity_id.split(".")[0] == "light");
      const lights_on = lights.filter(item => item.state == "on").length;

      return `${lights_on} ${lights_on == 1 ? "Light" : "Lights"} on`;
    ]]]

  styles:
    card:
      - --icon-color: var(--color-yellow)

  custom_fields:
    controls:
      card:
        type: custom:layout-card
        layout_type: grid
        layout:
          grid-gap: var(--grid-gap)
          grid-template-columns: 1fr 1fr
          margin: 0
          padding: 0
        cards:
          - type: custom:button-card
            template: generic_card_button
            show_label: "[[[ return variables.mj_hide_controls_icon; ]]]"
            label: Turn Off
            icon: "[[[ return variables.mj_hide_controls_icon ? '' : 'mdi:lightbulb-off'; ]]]"
            tap_action:
              action: call-service
              service: light.turn_off
              service_data:
                entity_id: all

          - type: custom:button-card
            template: generic_card_button
            show_label: "[[[ return variables.mj_hide_controls_icon; ]]]"
            label: Turn On
            icon: "[[[ return variables.mj_hide_controls_icon ? '' : 'mdi:lightbulb-on'; ]]]"
            tap_action:
              action: call-service
              service: light.turn_on
              service_data:
                entity_id: all
