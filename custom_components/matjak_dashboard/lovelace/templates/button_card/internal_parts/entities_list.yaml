entities_list:
  show_icon: false
  show_name: false
  show_state: false

  variables:
    entities: []
    orientation: vertical

  styles:
    card:
      - padding: 0
    grid:
      - grid-template: >
          "container" 1fr / 1fr

  custom_fields:
    container:
      card:
        type: custom:layout-card
        layout_type: "[[[ return variables.orientation; ]]]"
        layout:
          card_margin: 0
          margin: 0
          padding: 0
        cards: >
          [[[
            const device_classes = ["battery"];
            const domains = ["sensor"];
            const result = [];

            for (let i = 0; i < variables.entities.length; i++) {
              const entity_id = variables.entities[i];
              const domain = entity_id.split(".")[0];
              const device_class = domain == "sensor" ? states[entity_id].attributes.device_class : null;
              const item = {
                type: "custom:button-card",
                template: device_classes.includes(device_class) ? device_class : domains.includes(domain) ? domain : "generic_card",
                entity: entity_id,
                styles: {
                  card: [
                    {"border-radius": 0}
                  ]
                },
                variables: {
                  mj_is_nested: true
                }
              };

              result.push(item);
            }

            return result;
          ]]]