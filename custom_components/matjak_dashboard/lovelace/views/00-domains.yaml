# matjak_dashboard

{% for domain in mj.entities.get_domains() %}
{% set domain_entities = mj.entities.get_by_domain(domain.id) %}
{% set domain_title = mj.translations["domain_" ~ domain.id] | default(domain.id.replace("_", " ")) | title %}
- title: Entities
  icon: {{ domain.icon }}
  path: entities_{{ domain.id }}
  visible: false
  type: custom:grid-layout
  layout:
    grid-gap: 0 var(--grid-column-gap)
    grid-template: >
      "header" auto
      "main" 1fr / 1fr
    height: 100%
    margin: 0
  cards:
    - type: custom:mod-card
      view_layout:
        grid-area: header
      style: |
        ha-card {
          background: var(--app-header-background-color);
          border-radius: 0;
          padding: 0 var(--view-padding-h) var(--grid-row-gap) var(--view-padding-h)
        }
      card:
        type: custom:layout-card
        layout_type: grid
        layout:
          grid-gap: var(--grid-gap)
          grid-template-columns: auto 1fr
          margin: 0
          place-items: center start
        cards:
          - type: custom:button-card
            template: mj_back_button
          - type: custom:button-card
            template: mj_title
            label: {{ domain_title }}
            styles:
              card:
                - margin: 0

    - type: custom:mod-card
      view_layout:
        grid-area: main
      style: |
        :host {
          overflow: auto;
        }
      card:
        type: custom:layout-card
        layout_type: grid
        layout:
          grid-gap: var(--grid-row-gap) 0
          grid-template-columns: 1fr
          margin: 0
          padding: var(--view-padding)
        cards:
          {% set grouped_entities = domain_entities | groupby("device_class") %}
          {% set ns = namespace(entities_with_device_class=[]) %}
          {% set no_device_classes = ["", "None", null] %}
          {% for device_class, entities in grouped_entities if device_class not in no_device_classes %}
          {% set ns.entities_with_device_class = ns.entities_with_device_class + entities %}
          - type: custom:layout-card
            layout_type: grid
            layout:
              grid-gap: var(--grid-gap)
              grid-template-columns: repeat(auto-fit, minmax(160px, 1fr))
              margin: 0
            cards:
              - type: custom:button-card
                view_layout:
                  grid-column: 1/-1
                template: mj_title
                label: {{ mj.translations["device_class" ~ device_class] | default(device_class | replace("_", " ")) | title }}

              {% for entity in entities | sort(attribute="name") %}
              - type: custom:button-card
                template: mj_entity_card
                entity: {{ entity.entity_id }}
              {% endfor %}
          {% endfor %}

          {% for device_class, entities in grouped_entities if device_class in no_device_classes %}
          - type: custom:layout-card
            layout_type: grid
            layout:
              grid-gap: var(--grid-gap)
              grid-template-columns: repeat(auto-fit, minmax(160px, 1fr))
              margin: 0
            cards:
              {% if ns.entities_with_device_class | count > 0 %}
              - type: custom:button-card
                view_layout:
                  grid-column: 1/-1
                template: mj_title
                label: {{ mj.translations.device_class_non_existant }}
              {% endif %}

              {% for entity in entities | sort(attribute="name") %}
              - type: custom:button-card
                template: mj_entity_card
                entity: {{ entity.entity_id }}
              {% endfor %}
          {% endfor %}
{% endfor %}