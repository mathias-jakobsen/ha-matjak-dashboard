# matjak_dashboard

{% for domain in mj.domains %}
{% set domain_card_template = "mj_" ~ domain.id ~ "_card" %}
{% set domain_entities = mj.entities.get_by_device_class(domain) %}
{% set domain_title = mj.translations["domain_" ~ domain.id] | default(domain.id.replace("_", " ")) | title %}
- title: Entities
  icon: {{ domain.icon }}
  path: entities_{{ domain.id }}
  visible: false
  type: custom:grid-layout
  layout:
    grid-gap: 0 var(--grid-column-gap)
    grid-template: >
      "header" auto
      "main" 1fr / 1fr
    height: 100%
    margin: 0
  cards:
    - type: custom:mod-card
      view_layout:
        grid-area: header
      style: |
        ha-card {
          background: var(--app-header-background-color);
          border-radius: 0;
          padding: 0 var(--view-padding-h) var(--grid-row-gap) var(--view-padding-h)
        }
      card:
        type: custom:layout-card
        layout_type: grid
        layout:
          grid-gap: var(--grid-gap)
          grid-template-columns: auto 1fr
          margin: 0
          place-items: center start
        cards:
          - type: custom:button-card
            template: mj_back_button
          - type: custom:button-card
            template: mj_title_card
            label: {{ domain_title }}
            styles:
              card:
                - margin: 0

    - type: custom:mod-card
      view_layout:
        grid-area: main
      style: |
        :host {
          overflow: auto;
        }
      card:
        type: custom:layout-card
        layout_type: grid
        layout:
          grid-gap: var(--grid-row-gap) 0
          grid-template-columns: 1fr
          margin: 0
          padding: var(--view-padding)
        cards:
          {% for device_class, entities in domain_entities %}
          {% set entities = entities | rejectattr("hidden", "true") | list %}
          {% if entities | count > 0 %}
          - type: custom:layout-card
            layout_type: grid
            layout:
              grid-gap: var(--grid-gap)
              grid-template-columns: repeat(auto-fill, minmax(var(--card-size-{{ domain.id }}, var(--card-size-default)), 1fr))
              margin: 0
            cards:
              {% if device_class or loop.index > 1 %}
              - type: custom:button-card
                view_layout:
                  grid-column: 1/-1
                template: mj_title_card
                label:
                  {% if device_class %}
                  {{ mj.translations["device_class" ~ device_class] | default(device_class | replace("_", " ")) | title }}
                  {% else %}
                  {{ mj.translations.device_class_non_existant }}
                  {% endif %}
              {% endif %}

              {% for entity in entities | sort(attribute="name") %}
              {% set device_class_card_template = "mj_" ~ domain.id ~ "_" ~ device_class ~ "_card" %}
              - type: custom:button-card
                template:
                  {% if device_class_card_template in mj.button_card_templates %}
                  {{ device_class_card_template }}
                  {% elif domain_card_template in mj.button_card_templates %}
                  {{ domain_card_template }}
                  {% else %}
                  mj_entity_card
                  {% endif %}
                entity: {{ entity.entity_id }}
                {% if domain.id == "scene" and entity.entity_id in mj.user_config.scene_colors %}
                variables:
                  mj_color: {{ mj.user_config.scene_colors[entity.entity_id] }}
                {% endif %}
              {% endfor %}
          {% endif %}
          {% endfor %}
{% endfor %}