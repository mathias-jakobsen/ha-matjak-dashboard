# matjak_dashboard


#-----------------------------------------------------------#
#       Constants
#-----------------------------------------------------------#

{% set template_domains = ["climate", "light", "lock", "sensor"] %}
{% set template_device_classes = ["battery"] %}
{% set big_domains = ["climate", "cover"] %}
{% set domains = registry.domains|list %}


#-----------------------------------------------------------#
#       Domain Views
#-----------------------------------------------------------#

{% for current_domain in domains + [None] %}
- title: {{ current_domain is none and "Entities" or current_domain|replace("_", " ")|title }}
  icon: mdi:format-list-bulleted-type
  path: {{ current_domain is none and "entities" or ("entities_" ~ current_domain) }}
  visible: {{ current_domain is none }}
  type: custom:grid-layout
  layout:
    grid-template: >
      "main sidebar" 1fr / 1fr 0.6fr
    height: 100%
    margin: 0
    mediaquery:
      "(max-width: 959px)":
        grid-template: >
          "{{ current_domain is none and 'sidebar' or 'main' }}" 1fr / 1fr
  cards:
    #--------------------------------------------#
    #       Sidebar
    #--------------------------------------------#

    - type: custom:mod-card
      view_layout:
        grid-area: sidebar
        {% if current_domain is not none %}
        show:
          mediaquery: "(min-width: 960px)"
        {% endif %}
      style: |
        ha-card {
          margin: var(--view-padding);
        }

        @media (min-width: 960px) {
          ha-card {
            background: var(--ha-card-background);
            box-shadow: var(--ha-card-box-shadow);
            margin: var(--view-padding-vertical) var(--view-padding-horizontal) var(--view-padding-vertical) calc(var(--view-padding-horizontal) / 2);
          }

          :host {
            overflow: auto;
          }

          :host::-webkit-scrollbar {
            width: var(--scrollbar-width);
          }

          :host::-webkit-scrollbar-track {
            background: var(--scrollbar-track-color);
            border-radius: var(--scrollbar-border-radius);
          }

          :host::-webkit-scrollbar-thumb {
            background: var(--scrollbar-thumb-color);
            border-radius: var(--scrollbar-border-radius);
          }
        }
      card:
        type: custom:layout-card
        layout_type: grid
        layout:
          grid-gap: 0
          grid-template-columns: 1fr 1fr
          margin: 0
          mediaquery:
            "(max-width: 959px)":
              grid-gap: var(--grid-gap)
              grid-template-columns: repeat(auto-fill, minmax(250px, 1fr))
        cards:
          - type: custom:button-card
            view_layout:
              grid-column: 1/-1
            template: title
            label: Entities
            styles:
              card:
                - padding: 12px
              label:
                - font-size: 23px
          {% for domain in domains %}
          {% set domain_entities_count = registry.entities.get_by_domain(domain)|count %}
          {% if domain_entities_count > 0 %}
          - type: custom:button-card
            template: generic_card
            icon: {{ registry.domains.get_domain_icon(domain) }}
            name: {{ domain.replace("_", " ")|title }}
            state_display: {{ domain_entities_count ~ (" Entity" if domain_entities_count == 1 else " Entities") }}
            card_mod:
              style: |
                @media (min-width: 960px) {
                  ha-card {
                    --ha-card-background: none;
                    --ha-card-box-shadow: none;
                  }
                  {% if current_domain == domain or (current_domain is none and domain == domains[0]) %}
                  ha-card:before {
                    background: rgba(var(--color-domain-{{ domain }}, var(--button-card-background-color-on)), 0.2);
                    bottom: 0;
                    content: "";
                    left: 0;
                    position: absolute;
                    right: 0;
                    top: 0;
                  }
                  {% endif %}
                }
            styles:
              card:
                - --icon-color: var(--color-domain-{{ domain }}, var(--button-card-background-color-on))
            tap_action:
              action: navigate
              navigation_path: entities_{{ domain }}
          {% endif %}
          {% endfor %}


    #--------------------------------------------#
    #       Main
    #--------------------------------------------#

    - type: custom:mod-card
      view_layout:
        grid-area: main
        {% if current_domain is none %}
        show:
          mediaquery: "(min-width: 960px)"
        {% endif %}
      style: |
        ha-card {
          padding: var(--view-padding);
        }

        @media (min-width: 960px) {
          ha-card {
            padding: var(--view-padding-vertical) calc(var(--view-padding-horizontal) / 2) var(--view-padding-vertical) var(--view-padding-horizontal);
          }

          :host {
            overflow: auto;
          }

          :host::-webkit-scrollbar {
            width: var(--scrollbar-width);
          }

          :host::-webkit-scrollbar-track {
            background: var(--scrollbar-track-color);
            border-radius: var(--scrollbar-border-radius);
          }

          :host::-webkit-scrollbar-thumb {
            background: var(--scrollbar-thumb-color);
            border-radius: var(--scrollbar-border-radius);
          }
        }
      card:
        type: custom:layout-card
        layout_type: grid
        layout:
          grid-gap: var(--grid-gap)
          grid-template-columns: 1fr
          margin: 0
        cards:
          {% set ns = namespace(entities=[]) %}
          {% set domain = current_domain is none and domains[0] or current_domain %}
          {% for area in registry.areas %}
          {% set area_entities = registry.entities.get_by_area(area, domain) %}
          {% set ns.entities = ns.entities + area_entities|map(attribute="entity_id")|list %}
          {% if area_entities|count > 0 %}
        - type: custom:layout-card
          layout_type: grid
          layout:
            grid-gap: var(--grid-gap)
            {% set min_width = domain in big_domains and "300px" or "150px" %}
            grid-template-columns: repeat(auto-fill, minmax({{ min_width }}, 1fr))
            margin: 0
          cards:
            - type: custom:button-card
              view_layout:
                grid-column: 1/-1
              template: title
              label: {{ area.name }}

            {% for entity in area_entities %}
            - type: custom:button-card
              template:
                {% if entity.device_class and entity.device_class in template_device_classes %}
                {{ entity.device_class }}
                {% elif entity.device_class is none and entity.original_device_class in template_device_classes %}
                {{ entity.original_device_class }}
                {% elif entity.domain in template_domains %}
                {{ entity.domain }}
                {% else %}
                {{ "generic_card" }}
                {% endif %}
              entity: {{ entity.entity_id }}
            {% endfor %}
        {% endif %}
        {% endfor %}

        {% set entities = registry.entities.get_by_domain(domain)|rejectattr("entity_id", "in", ns.entities)|list %}
        {% if entities|count > 0 %}
        - type: custom:layout-card
          layout_type: grid
          layout:
            grid-gap: var(--grid-gap)
            {% set min_width = domain in big_domains and "300px" or "150px" %}
            grid-template-columns: repeat(auto-fill, minmax({{ min_width }}, 1fr))
            margin: 0
          cards:
            {% if ns.entities|count > 0 %}
            - type: custom:button-card
              view_layout:
                grid-column: 1/-1
              template: title
              label: No Area
            {% endif %}

            {% for entity in entities %}
            - type: custom:button-card
              template:
                {% if entity.device_class and entity.device_class in template_device_classes %}
                {{ entity.device_class }}
                {% elif entity.device_class is none and entity.original_device_class in template_device_classes %}
                {{ entity.original_device_class }}
                {% elif entity.domain in template_domains %}
                {{ entity.domain }}
                {% else %}
                {{ "generic_card" }}
                {% endif %}
              entity: {{ entity.entity_id }}
            {% endfor %}
        {% endif %}
{% endfor %}