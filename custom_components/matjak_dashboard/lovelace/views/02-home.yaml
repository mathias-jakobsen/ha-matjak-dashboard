# matjak_dashboard

- title: Home
  icon: mdi:home
  path: home
  type: custom:grid-layout
  layout:
    grid-gap: 0 var(--grid-column-gap)
    grid-template: >
      "main sidebar" 1fr / 1fr 0.4fr
    margin: 0
    padding: var(--view-padding)
    mediaquery:
      "(max-width: 959px)":
        grid-gap: var(--grid-row-gap) 0
        grid-template: >
          "sidebar" auto
          "main" 1fr / 1fr
  cards:
    - type: custom:layout-card
      view_layout:
        grid-area: main
      layout_type: grid
      layout:
        grid-gap: var(--grid-row-gap) 0
        grid-template-columns: 1fr
        margin: 0
      cards:
        {% for location, areas in mj.areas.group_by_location() %}
        {% set areas_count = areas | count %}
        - type: custom:layout-card
          layout_type: grid
          layout:
            grid-gap: var(--grid-gap)
            grid-template-columns: repeat(auto-fit, minmax(160px, 1fr))
            margin: 0
          cards:
            - type: custom:button-card
              view_layout:
                grid-column: 1/-1
              template: mj_title_card
              label: {{ mj.translations["area_location_" ~ location] | default(location.replace("_", " ")) | title }}
              state_display: {{ areas_count }} {{ areas_count == 1 and mj.translations.area or mj.translations.areas }}

            {% for area in areas %}
            {% set area_entities = mj.entities.get_by_area(area) %}
            {% set area_entities_count = area_entities | count %}
            - type: custom:button-card
              template: mj_area_card
              icon: {{ area.icon }}
              name: {{ area.name }}
              label: {{ area_entities_count }} {{ area_entities_count == 1 and mj.translations.entity or mj.translations.entities }}
              variables:
                {% if area.color is not none %}
                mj_color: {{ area.color }}
                {% endif %}

                {% set light_entities = area.entities.light and [area.entities.light] or area_entities | selectattr("domain", "==", "light") | map(attribute="entity_id") | list %}
                {% set media_player_entities = area.entities.media_player and [area.entities.media_player] or area_entities | selectattr("domain", "==", "media_player") | map(attribute="entity_id") | list %}
                {% set climate_entities = area.entities.climate and [area.entities.climate] or area_entities | selectattr("domain", "==", "climate") | map(attribute="entity_id") | list %}
                {% set presence_entities = area.entities.presence and [area.entities.presence] or area_entities | selectattr("domain", "==", "binary_sensor") | selectattr("device_class", "in", ["motion", "occupancy", "presence"]) | map(attribute="entity_id") | list %}

                {% if (light_entities + media_player_entities + climate_entities + presence_entities) | count > 0 %}
                mj_entities:
                  {% if light_entities | count > 0 %}
                  - templates: [mj_area_card_entity_lights]
                    entities: {{ light_entities }}
                  {% endif %}

                  {% if media_player_entities | count > 0 %}
                  - templates: [mj_area_card_entity_media_player]
                    entities: {{ media_player_entities }}
                  {% endif %}

                  {% if climate_entities | count > 0 %}
                  - templates: [mj_area_card_entity_climate]
                    entities: {{ climate_entities }}
                  {% endif %}

                  {% if presence_entities | count > 0 %}
                  - templates: [mj_area_card_entity_presence]
                    entities: {{ presence_entities }}
                  {% endif %}
                {% endif %}
                mj_navigation_path: area_{{ area.id }}
            {% endfor %}
        {% endfor %}

    - type: custom:layout-card
      view_layout:
        grid-area: sidebar
      layout_type: grid
      layout:
        grid-gap: var(--grid-row-gap) 0
        grid-template-columns: 1fr
        margin: 0
      cards:
        - type: custom:layout-card
          layout_type: grid
          layout:
            grid-gap: var(--grid-gap)
            grid-template-columns: repeat(3, 1fr)
            margin: 0
          cards:
            - type: custom:button-card
              template: mj_entity_card
              icon: mdi:account-multiple
              label: "[[[ return 'Home' ]]]"
              variables:
                mj_layout: vertical
                mj_replace_name_with_label: true
            - type: custom:button-card
              template: mj_entity_card
              icon: mdi:lightbulb-multiple
              label: "[[[ return '3 lights on' ]]]"
              variables:
                mj_layout: vertical
                mj_replace_name_with_label: true